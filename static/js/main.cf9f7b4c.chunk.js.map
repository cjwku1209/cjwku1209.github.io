{"version":3,"sources":["redux/utils.js","redux/logger/logger-types.js","redux/logger/logger-reducer.js","redux/logger/logger-action.js","redux/logger/logger-saga.js","redux/login/login-types.js","redux/login/login-reducer.js","redux/alert/alert-types.js","redux/alert/alert-reducer.js","redux/controller/controller-types.js","redux/controller/controller-reducer.js","redux/alert/alert-action.js","redux/login/login-action.js","redux/login/login-saga.js","redux/controller/controller-action.js","redux/controller/controller-saga.js","redux/store.js","components/error-component/error-component.jsx","pages/calvin-page/calvin-page.jsx","pages/control-page/control-page.jsx","pages/index-page/index-page.jsx","pages/navigator.jsx","App.jsx","index.js"],"names":["createReducer","initialState","handlers","state","action","hasOwnProperty","type","payload","LoggerTypes","LoggerReducer","history","LoggerAction","dispatched","put","LoggerSaga","takeEvery","LoginTypes","LoginReducer","login","user","accountModalSuccess","loginInfo","AlertType","AlertReducer","message","show","ControllerTypes","ControllerReducer","controller","AlertAction","LoginAction","userInfo","result","LoginCreateStart","task","Promise","resolve","reject","fetch","method","body","accountInfo","headers","then","response","json","call","success","LoginStart","LoginSaga","ControllerAction","user_id","controllerFetchStart","JSON","stringify","console","log","controllerUpdateStart","ControllerSaga","saga","createSagaMiddleware","Store","createStore","combineReducers","applyMiddleware","run","all","map","fork","ErrorNotFoundComponent","Fragment","Component","React","CalvinPage","connect","store","props","angleX","angleY","movement","shoot","fireRate","force","levitation","this","dispatch","_id","push","updateController","style","color","position","right","top","overlay","Item","onClick","icon","SettingOutlined","size","background","borderColor","backgroundColor","width","height","display","flexDirection","alignItems","justifyContent","paddingTop","borderRadius","tiltAngleXManual","tiltAngleYManual","glareEnable","alignContent","src","fontSize","textAlign","padding","toFixed","min","max","step","value","onChange","val","setState","bottom","baseShape","JoystickShape","Square","stickShape","sticky","baseColor","stickColor","move","stick","direction","stop","marginTop","vertical","StopOutlined","FireOutlined","y","x","particlesInit","main","a","loadFull","particlesLoaded","container","myRef","createRef","className","zIndex","id","init","loaded","options","interactivity","events","enable","mode","onHover","resize","modes","quantity","repulse","distance","duration","fpsLimit","particles","links","opacity","collisions","outModes","default","random","speed","straight","number","density","area","shape","detectRetina","IndexPage","Navigator","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"yRAAaA,EAAgB,SAACC,EAAcC,GAAf,OAA4B,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC1F,OAAIF,EAASG,eAAeD,EAAOE,MAC3BJ,EAASE,EAAOE,MAAMH,EAAOC,EAAOG,SAEpCJ,ICJIK,EACA,oBCcAC,EAAgBT,EAZR,CACpBU,QAAS,IAWgC,eACxCF,GATiB,SAACL,EAAOI,GAAR,mBAAC,eAChBJ,GADe,IAElBO,QAAQ,GAAD,mBACHP,EAAMO,SADH,CAENH,UCJWI,EALM,SAAAP,GAAM,MAAK,CAC7BE,KAAME,EACND,QAASH,ICGJQ,EAAU,UAAG,SAAbA,EAAwBR,GAAX,oEACdA,EAAOE,OAASE,EADF,gBAEjB,OAFiB,SAEXK,YAAIF,EAAwBP,IAFjB,oCAAbQ,MAMOE,EAAU,UAAG,SAAbA,IAAa,iEACzB,OADyB,SACnBC,YAAU,IAAKH,GADI,oCAAbE,MCbAE,EACI,oBADJA,EAEK,qBAFLA,EAGW,2BAHXA,EAIY,4BAJZA,EAKU,0BALVA,EAMD,eC0BCC,EAAejB,EA7BP,CACjBkB,OAAO,EACPC,KAAM,GACNC,qBAAqB,IA0BgB,mBACpCJ,GAxBe,SAACb,EAAOI,GAAR,mBAAC,eACdJ,GADa,IAEhBgB,KAAMZ,EAAQc,UACdH,OAAO,OAoB8B,cAEpCF,GAnBqB,SAACb,EAAOI,GAAR,mBAAC,eACpBJ,GADmB,IAEtBiB,qBAAqB,OAegB,cAGpCJ,GAfyB,SAACb,EAAOI,GAAR,mBAAC,eACxBJ,GADuB,IAE1BiB,oBAAqBb,EAAQa,yBAUQ,cAIpCJ,GAXU,SAACb,EAAOI,GAAR,mBAAC,eACTJ,GADQ,IAEXgB,KAAM,GACND,OAAO,OAI8B,IChC5BI,EACI,oBADJA,EAEG,mBCkBHC,EAAevB,EAjBP,CACjBwB,QAAS,GACTC,MAAM,IAe+B,iBAAC,EACrCH,GAba,SAACnB,EAAOI,GAAR,mBAAC,eACZJ,GADW,IAEdqB,QAASjB,EAAQiB,QACjBC,MAAM,OAS+B,YAAC,EAErCH,GARa,SAACnB,EAAOI,GAAR,mBAAC,eACZJ,GADW,IAEdqB,QAAS,GACTC,MAAM,OAG+B,ICpB5BC,EACe,oCADfA,EAEgB,qCAFhBA,EAGgB,qCCShBC,EAAoB3B,EATZ,CACjB4B,WAAY,IAQ8B,eACzCF,GANyB,SAACvB,EAAOI,GAAR,mBAAC,eACxBJ,GADuB,IAE1ByB,WAAYrB,EAAQqB,iBCMXC,EAbM,SAACL,GAAD,MAAc,CAC7BlB,KAAMgB,EACNf,QAAS,CACLiB,QAASA,EACTC,MAAM,KCsCDK,EAnCO,SAACC,GAAD,MAAe,CAC/BzB,KAAMU,EACNT,QAAS,CACLc,UAAWU,KAgCND,EArBa,SAACE,GAAD,MAAa,CACnC1B,KAAMU,EACNT,QAAQ,CACJyB,OAAQA,KAkBHF,EAPE,iBAAO,CAClBxB,KAAMU,EACNT,QAAQ,KC9BN0B,EAAgB,UAAI,SAApBA,EAA+B7B,GAAX,yEAaT,OAZP8B,EAAO,kBAAM,IAAIC,SAAQ,SAACC,EAASC,GACrCC,MAAM,mBAAoB,CACtBC,OAAQ,OACRC,KAAMpC,EAAOG,QAAQkC,YACrBC,QAAS,CACL,eAAgB,qCAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAE,GACFT,EAAQS,UAVE,SAaHC,YAAKZ,GAbF,YAahBW,EAbgB,QAcdE,QAdc,gBAelB,OAfkB,SAeZlC,YAAIiB,EAA8Be,EAAKE,UAf3B,8BAkBlB,OAlBkB,UAkBZlC,YAAIgB,EAAuBgB,EAAKrB,UAlBpB,qCAApBS,MAsBAe,EAAU,UAAI,SAAdA,EAAyB5C,GAAX,yEAaH,OAZP8B,EAAO,kBAAM,IAAIC,SAAQ,SAACC,EAASC,GACrCC,MAAM,aAAc,CAChBC,OAAQ,OACRC,KAAMpC,EAAOG,QAAQc,UACrBqB,QAAS,CACL,eAAgB,qCAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAE,GACFT,EAAQS,UAVJ,SAaGC,YAAKZ,GAbR,YAaVW,EAbU,QAcRE,QAdQ,gBAeZ,OAfY,SAeNlC,YAAIiB,EAAwBe,EAAK1B,OAf3B,8BAkBZ,OAlBY,UAkBNN,YAAIgB,EAAuBgB,EAAKrB,UAlB1B,qCAAdwB,MAsBOC,EAAS,UAAG,SAAZA,IAAY,iEACrB,OADqB,SACflC,YAAUC,EAA+BiB,GAD1B,OAErB,OAFqB,SAEflB,YAAUC,EAAwBgC,GAFnB,oCAAZC,MCtBAC,EAtBiB,SAACtB,GAAD,MAAiB,CAC3CtB,KAAMoB,EACNnB,QAAS,CACLqB,WAAYA,KAmBPsB,EAfiB,SAACC,EAASvB,GAAV,MAA0B,CACpDtB,KAAMoB,EACNnB,QAAS,CACL4C,QAASA,EACTvB,WAAYA,KCZdwB,EAAoB,UAAG,SAAvBA,EAAkChD,GAAX,yEAaZ,OAZP8B,EAAO,kBAAM,IAAIC,SAAQ,SAACC,EAASC,GACrCC,MAAM,kBAAmB,CACrBC,OAAQ,OACRC,KAAMa,KAAKC,UAAU,CAAC,QAAWlD,EAAOG,QAAQ4C,UAChDT,QAAS,CACL,eAAgB,qCAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAE,GACFT,EAAQS,UAVK,SAaNC,YAAKZ,GAbC,UAanBW,EAbmB,OAczBU,QAAQC,IAAIX,IACTA,EAAKE,QAfiB,gBAgBrB,OAhBqB,SAgBflC,YAAIqC,EAAuCL,EAAKjB,WAAW,KAhB5C,oCAAvBwB,MAoBAK,EAAqB,UAAG,SAAxBA,EAAmCrD,GAAX,yEAab,OAZP8B,EAAO,kBAAM,IAAIC,SAAQ,SAACC,EAASC,GACrCC,MAAM,0BAA0BlC,EAAOG,QAAQ4C,QAAS,CACpDZ,OAAQ,OACRC,KAAMpC,EAAOG,QAAQqB,WACrBc,QAAS,CACL,eAAgB,qCAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAE,GACFT,EAAQS,UAVM,SAaPC,YAAKZ,GAbE,YAapBW,EAboB,QAclBE,QAdkB,gBAetB,OAfsB,SAehBlC,YAAIqC,EAAuCL,EAAKjB,aAfhC,oCAAxB6B,MAmBOC,EAAc,UAAG,SAAjBA,IAAiB,iEAC1B,OAD0B,SACpB3C,YAAUW,EAAwC0B,GAD9B,OAE1B,OAF0B,SAEpBrC,YAAUW,EAAyC+B,GAF/B,oCAAjBC,MC5BPC,EAAOC,cAEAC,EAAQC,YAAYC,YAAgB,CAChDtD,gBACAQ,eACAM,eACAI,sBACGqC,YAAgBL,IAEpBA,EAAKM,IAAL,UAAS,8EACR,OADQ,SACFC,YAAI,CACTpB,YAAKhC,IADG,mBAEL,CACF4C,EACAT,GACCkB,IAAIC,QANC,2C,qBC1BIC,GAAyB,kBACrC,kBAAC,IAAMC,SAAP,mB,kCCEKC,G,gKAEL,WACC,OACC,kBAAC,IAAMD,SAAP,sB,GAJqBE,IAAMD,WAgBjBE,GAJCC,aAAQ,SAAAC,GAAK,MAAK,KAAlBD,CAEVH,I,kGCVEA,G,oDAEL,WAAYK,GAAO,IAAD,+BACjB,cAAMA,IACDzE,MAAQ,CACH0E,OAAS,EACTC,OAAS,EACTC,SAAU,OACVC,OAAO,EACPC,SAAU,GACVC,MAAO,EACPC,WAAY,GATL,E,qDAaf,WACIC,KAAKR,MAAMS,SAASnC,EAAuCkC,KAAKR,MAAM3D,aAAaE,KAAKmE,IAAKjC,KAAKC,UAAU8B,KAAKjF,W,+BAGrH,YACyC,IAAlCiF,KAAKR,MAAM3D,aAAaC,OACvBkE,KAAKR,MAAMlE,QAAQ6E,KAAK,KAE5BH,KAAKI,qB,oBAMZ,WAAU,IAAD,OACR,OACC,kBAAC,IAAMlB,SAAP,KACa,yBAAKmB,MAAO,CAACC,MAAO,QAASC,SAAU,WAAYC,MAAO,OAAQC,IAAK,SACnE,kBAAC,KAAD,CACIC,QAAS,WACL,OACI,kBAAC,KAAD,KACI,kBAAC,KAAKC,KAAN,iBAGA,kBAAC,KAAKA,KAAN,KACI,uBAAGC,QAAS,WACR,EAAKpB,MAAMS,SAASvD,KACpB,EAAK8C,MAAMlE,QAAQ6E,KAAK,OAF5B,cAYhB,kBAAC,KAAD,CAAQU,KAAM,kBAACC,GAAA,EAAD,MAAoBC,KAAK,QAAQV,MAAO,CAACW,WAAY,UAAWC,YAAa,WAAY/F,KAAK,cAGpH,yBAAKmF,MAAO,CAACa,gBAAiB,UAAWC,MAAO,QAASC,OAAQ,UAE7D,yBAAKf,MAAO,CACRgB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,WAAY,SAEZ,yBAAKpB,MAAO,CACRc,MAAO,QACPC,OAAQ,QACRM,aAAc,MACdR,gBAAiB,UAEjB,kBAAC,KAAD,CAAMS,kBAAmB,EAAE3B,KAAKjF,MAAM0E,OAAQmC,iBAAkB5B,KAAKjF,MAAM2E,OAAQmC,aAAa,GAC5F,yBAAKxB,MAAO,CACRc,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZO,aAAc,WAEd,yBACIzB,MAAO,CAACe,OAAQ,QAASK,WAAY,QACrCM,IAA8B,uBAI9C,yBAAK1B,MAAO,CAACC,MAAO,QAAS0B,SAAU,OAAQC,UAAW,SAAUC,QAAS,SACzE,yCAAelC,KAAKjF,MAAM0E,OAAO0C,QAAQ,GAAzC,UACA,yCAAenC,KAAKjF,MAAM2E,OAAOyC,QAAQ,GAAzC,QACA,0CACc,uBAAG9B,MAAO,CAACC,MAAO,YAAaN,KAAKjF,MAAM4E,aAIhE,yBAAKU,MAAO,CAACgB,QAAS,OAAQC,cAAe,MAAOQ,aAAa,SAAUP,WAAY,SAAUC,eAAgB,SAAUL,MAAO,UAC9H,yBAAKd,MAAO,CAACC,MAAO,QAASa,MAAO,SAApC,cAGA,kBAAC,KAAD,CACId,MAAO,CAACc,MAAO,OACfiB,IAAK,EACLC,IAAK,EACLC,KAAM,GACNC,MAAOvC,KAAKjF,MAAM8E,SAClB2C,SAAU,SAACC,GACP,EAAKC,SAAS,CAAC7C,SAAS4C,IAAM,WAC1B,EAAKrC,yBAIb,kBAAC,KAAD,CAAamC,MAAOvC,KAAKjF,MAAM8E,YAEvC,yBAAKQ,MAAO,CAACgB,QAAS,OAAQC,cAAe,MAAOQ,aAAa,SAAUP,WAAY,SAAUC,eAAgB,SAAUL,MAAO,QAASM,WAAY,QACnJ,yBAAKpB,MAAO,CAACC,MAAO,QAASa,MAAO,SAApC,UAGA,kBAAC,KAAD,CACId,MAAO,CAACc,MAAO,OACfiB,IAAK,EACLC,IAAK,EACLC,KAAM,GACNC,MAAOvC,KAAKjF,MAAM+E,MAClB0C,SAAU,SAACC,GACP,EAAKC,SAAS,CAAC5C,MAAM2C,IAAM,WACvB,EAAKrC,yBAGb,kBAAC,KAAD,CAAamC,MAAOvC,KAAKjF,MAAM+E,SAEvC,yBAAKO,MAAO,CACRE,SAAU,QACVoC,OAAQ,OACRtB,QAAS,OACTC,cAAe,MACfH,MAAO,QACPK,eAAgB,SAChBD,WAAY,WAEZ,yBAAKlB,MAAO,CACRc,MAAO,MACPE,QAAS,OACTE,WAAY,SACZD,cAAe,WAEf,kBAAC,YAAD,CACIsB,UAAWC,iBAAcC,OACzBC,WAAYF,iBAAcC,OAC1B/B,KAAM,GACNiC,QAAQ,EACRC,UAAW,UACXC,WAAY,UACZC,KAAM,SAACC,GACH,EAAKV,SAAS,CAAC/C,SAAUyD,EAAMC,YAAY,WACvC,EAAKjD,uBAGbkD,KAAM,WACF,EAAKZ,SAAS,CAAC/C,SAAU,SAAS,WAC9B,EAAKS,yBAIjB,yBAAKC,MAAO,CAAC2B,SAAU,OAAQ1B,MAAO,UAAWiD,UAAW,SAA5D,aAIJ,yBAAKlD,MAAO,CACRc,MAAO,KACPE,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBF,cAAe,WAEX,kBAAC,KAAD,CAAQjB,MAAO,CACXe,OAAQ,IAEZoC,UAAQ,EACRpB,IAAK,EACLC,IAAK,GACLC,KAAM,IACNC,MAAOvC,KAAKjF,MAAMgF,WAClByC,SAAU,SAACC,GACP,EAAKC,SAAS,CAAC3C,WAAW0C,IAAM,WAC5B,EAAKrC,yBAGjB,yBAAKC,MAAO,CAAC2B,SAAU,OAAQ1B,MAAO,UAAWiD,UAAW,SAA5D,OAIJ,yBAAKlD,MAAO,CACRc,MAAO,MACPE,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBF,cAAe,WAEf,kBAAC,KAAD,CACIV,QAAS,WACL,EAAK8B,SAAS,CAAC9C,OAAQ,EAAK7E,MAAM6E,QAAQ,WACtC,EAAKQ,uBAGbC,MAAO,CAACc,MAAO,GAAIC,OAAQ,GAAIF,gBAAiB,UAAWD,YAAa,YAG7D,EAAKlG,MAAM6E,MACF,kBAAC6D,GAAA,EAAD,CAAcpD,MAAO,CAAC2B,SAAU,GAAI1B,MAAO,aAG5C,kBAACoD,GAAA,EAAD,CAAcrD,MAAO,CAAC2B,SAAU,GAAI1B,MAAO,cAMlE,yBAAKD,MAAO,CAAC2B,SAAU,OAAQ1B,MAAO,UAAWiD,UAAW,SAG7C,EAAKxI,MAAM6E,MAAc,OAChB,UAK5B,yBAAKS,MAAO,CACRc,MAAO,MACPE,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBF,cAAe,WAEf,kBAAC,YAAD,CACIP,KAAM,GACNiC,QAAQ,EACRC,UAAW,UACXC,WAAY,UACZC,KAAQ,SAACC,GACL,EAAKV,SAAS,CACVjD,OAAQ2D,EAAMO,EACdjE,OAAQ0D,EAAMQ,IACf,WACC,EAAKxD,yBAGjB,yBAAKC,MAAO,CAAC2B,SAAU,OAAQ1B,MAAO,UAAWiD,UAAW,SAA5D,iB,GArPJnE,IAAMD,W,IAmQhBG,aAAQ,SAAAC,GAAK,MAAK,CAC5B1D,aAAc0D,EAAM1D,aACpBU,kBAAmBgD,EAAMhD,qBAFf+C,CAGVH,I,0BCvQEA,I,2DAEL,WAAYK,GAAO,IAAD,+BACjB,cAAMA,IAMPqE,cAPkB,wCAOF,WAAOC,GAAP,SAAAC,EAAA,sEAKTC,aAASF,GALA,2CAPE,wDAelBG,gBAAkB,SAACC,KAblB,EAAKC,MAAQ/E,IAAMgF,YACnB,EAAKrJ,MAAQ,GAHI,E,2CAmBlB,WACC,OACC,kBAAC,IAAMmE,SAAP,KACC,yBAAKmF,UAAU,QACd,yBAAKA,UAAU,SAAf,aAMA,yBAAKA,UAAU,WAAf,0DAGA,yBAAKhE,MAAO,CAACgB,QAAS,OAAQC,cAAe,MAAOG,WAAY,SAC/D,4BAIC4C,UAAU,SAJX,gBAmBF,yBAAKhE,MAAO,CAACiE,QAAQ,EAAG/D,SAAU,UACjC,kBAAC,KAAD,CACCgE,GAAG,cACHC,KAAMxE,KAAK6D,cACXY,OAAQzE,KAAKiE,gBACbS,QAAS,CACR1D,WAAY,CACXV,MAAO,CACPiC,MAAO,YAGRoC,cAAe,CACdC,OAAQ,CACNhE,QAAS,CACViE,QAAQ,EACRC,KAAM,QAELC,QAAS,CACVF,QAAQ,EACRC,KAAM,WAELE,QAAQ,GAEVC,MAAO,CACL9E,KAAM,CACP+E,SAAU,GAETC,QAAS,CACVC,SAAU,GACVC,SAAU,MAIZC,SAAU,IACVC,UAAW,CACVjF,MAAO,CACNiC,MAAO,WAERiD,MAAO,CACNlF,MAAO,UACP8E,SAAU,IACVP,QAAQ,EACRY,QAAS,GACTtE,MAAO,GAERuE,WAAY,CACXb,QAAQ,GAET1B,KAAM,CACLE,UAAW,OACXwB,QAAQ,EACTc,SAAU,CACTC,QAAS,UAEVC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEVC,OAAQ,CACRC,QAAS,CACRpB,QAAQ,EACRqB,KAAM,KAEP3D,MAAO,IAEPkD,QAAS,CACRlD,MAAO,IAER4D,MAAO,CACNjL,KAAM,UAEP6F,KAAM,CACLwB,MAAO,CAAEH,IAAK,EAAGC,IAAK,KAKvB+D,cAAc,W,GAnIEhH,IAAMD,YAkJjBkH,GALC/G,aAAQ,SAAAC,GAAK,MAAK,CAC5B1D,aAAc0D,EAAM1D,aACpBM,aAAcoD,EAAMpD,gBAFVmD,CAGVH,IC5ISmH,GAAY,kBACxB,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,KACjC,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,YAAYC,UAAWpH,KACzC,kBAAC,IAAD,CAAOoH,UAAWxH,QCZRyH,GAAM,kBAClB,kBAAC,IAAD,CAAUnH,MAAOd,GAChB,kBAAC,GAAD,Q,cCDFkI,IAASC,OAAO,kBAAC,GAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.cf9f7b4c.chunk.js","sourcesContent":["export const createReducer = (initialState, handlers) => (state = initialState, action) => {\n\tif (handlers.hasOwnProperty(action.type)) {\n\t\treturn handlers[action.type](state, action.payload);\n\t} else {\n\t\treturn state;\n\t}\n};\n","export const LoggerTypes = {\n\tDISPATCHED: 'Logger/DISPATCHED'\n};\n","import { createReducer } from '../utils';\nimport { LoggerTypes } from './logger-types';\n\nconst initialState = {\n\thistory: []\n};\n\nconst dispatched = (state, payload) => ({\n\t...state,\n\thistory: [\n\t\t...state.history,\n\t\tpayload\n\t]\n});\n\nexport const LoggerReducer = createReducer(initialState, {\n\t[LoggerTypes.DISPATCHED]: dispatched\n});\n","import { LoggerTypes } from './logger-types';\n\nconst dispatched = action => ({\n\ttype: LoggerTypes.DISPATCHED,\n\tpayload: action\n});\n\nexport const LoggerAction = {\n\tdispatched\n};\n","import {\n\tput,\n\ttakeEvery\n} from 'redux-saga/effects';\nimport { LoggerTypes } from './logger-types';\nimport { LoggerAction } from './logger-action';\n\nconst dispatched = function* (action) {\n\tif (action.type !== LoggerTypes.DISPATCHED) {\n\t\tyield put(LoggerAction.dispatched(action));\n\t}\n};\n\nexport const LoggerSaga = function* () {\n\tyield takeEvery('*', dispatched);\n};\n","export const LoginTypes = {\n    LOGIN_START: 'Login/LOGIN_START',\n    LOGIN_FINISH: \"Login/LOGIN_FINISH\",\n    LOGIN_CREATE_START: \"Login/LOGIN_CREATE_START\",\n    LOGIN_CREATE_FINISH: \"Login/LOGIN_CREATE_FINISH\",\n    LOGIN_MODAL_CLOSE: \"LOGIN/LOGIN_MODAL_CLOSE\",\n    LOGOUT: \"Login/LOGOUT\"\n};\n","import {LoginTypes} from \"./login-types\";\nimport {createReducer} from \"../utils\";\n\nconst initialState = {\n    login: false,\n    user: {},\n    accountModalSuccess: false,\n}\n\nconst loginFinish = (state, payload) => ({\n    ...state,\n    user: payload.loginInfo,\n    login: true\n});\n\nconst loginCreateFinish = (state, payload) => ({\n    ...state,\n    accountModalSuccess: true\n});\n\nconst loginCreateModalClose = (state, payload) => ({\n    ...state,\n    accountModalSuccess: payload.accountModalSuccess\n})\n\nconst logout = (state, payload) => ({\n    ...state,\n    user: {},\n    login: false\n})\n\n\nexport const LoginReducer = createReducer(initialState, {\n    [LoginTypes.LOGIN_FINISH]: loginFinish,\n    [LoginTypes.LOGIN_CREATE_FINISH]: loginCreateFinish,\n    [LoginTypes.LOGIN_MODAL_CLOSE]: loginCreateModalClose,\n    [LoginTypes.LOGOUT]: logout\n});\n","export const AlertType = {\n    ALERT_START: \"alert/ALERT_START\",\n    ALERT_STOP: \"alert/ALERT_STOP\",\n};","import { createReducer } from \"../utils\";\nimport { AlertType } from \"./alert-types\";\n\nconst initialState = {\n    message: \"\",\n    show: false\n};\n\nconst alertStart =(state, payload) => ({\n    ...state,\n    message: payload.message,\n    show: true\n});\n\nconst alertStop = (state, payload) => ({\n    ...state,\n    message: \"\",\n    show: false\n});\n\nexport const AlertReducer = createReducer(initialState, {\n    [AlertType.ALERT_START]: alertStart,\n    [AlertType.ALERT_STOP]: alertStop\n});\n","export const ControllerTypes = {\n    CONTROLLER_FETCH_START: 'controller/CONTROLLER_FETCH_START',\n    CONTROLLER_FETCH_FINISH: 'controller/CONTROLLER_FETCH_FINISH',\n    CONTROLLER_UPDATE_START: 'controller/CONTROLLER_UPDATE_START',\n    CONTROLLER_UPDATE_FINISH: 'controller/CONTROLLER_UPDATE_FINISH',\n};","import { createReducer } from \"../utils\"\nimport { ControllerTypes } from \"./controller-types\"\n\nconst initialState = {\n    controller: {}\n}\n\nconst controllerFetchFinish = (state, payload) => ({\n    ...state,\n    controller: payload.controller\n})\n\nexport const ControllerReducer = createReducer(initialState, {\n    [ControllerTypes.CONTROLLER_FETCH_FINISH]: controllerFetchFinish\n})","import { AlertType } from \"./alert-types\";\n\nconst alertStart = (message) => ({\n    type: AlertType.ALERT_START,\n    payload: {\n        message: message,\n        show: true\n    }\n});\n\nconst alertStop = () => ({\n    type: AlertType.ALERT_STOP,\n    payload: {}\n});\n\nexport const AlertAction = {\n    alertStart,\n    alertStop\n};\n","import {LoginTypes} from \"./login-types\";\n\nconst LoginStart = (loginInfo) => ({\n    type: LoginTypes.LOGIN_START,\n    payload: {\n        loginInfo: loginInfo\n    }\n});\n\nconst LoginFinish = (userInfo) => ({\n    type: LoginTypes.LOGIN_FINISH,\n    payload: {\n        loginInfo: userInfo\n    }\n});\n\nconst LoginCreateStart = (accountInfo) => ({\n    type: LoginTypes.LOGIN_CREATE_START,\n    payload: {\n        accountInfo: accountInfo\n    }\n});\n\nconst LoginCreateFinish = (result) => ({\n    type: LoginTypes.LOGIN_CREATE_FINISH,\n    payload:{\n        result: result\n    }\n});\n\nconst LoginCreateModalClose = (close) => ({\n    type: LoginTypes.LOGIN_MODAL_CLOSE,\n    payload: {\n        accountModalSuccess: false\n    }\n})\n\nconst Logout = () => ({\n    type: LoginTypes.LOGOUT,\n    payload:{\n\n    }\n})\n\nexport const LoginAction = {\n    LoginStart,\n    LoginFinish,\n    LoginCreateStart,\n    LoginCreateFinish,\n    LoginCreateModalClose,\n    Logout\n}\n\n","import {\n    call,\n    put,\n    takeEvery\n} from 'redux-saga/effects';\nimport {AlertAction} from \"../alert/alert-action\";\nimport {LoginAction} from \"./login-action\";\nimport {LoginTypes} from \"./login-types\";\n\nconst LoginCreateStart =  function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/create-user\", {\n            method: \"POST\",\n            body: action.payload.accountInfo,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(LoginAction.LoginCreateFinish(json.success))\n    }\n    else{\n        yield put(AlertAction.alertStart(json.message))\n    }\n}\n\nconst LoginStart =  function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/login\", {\n            method: \"POST\",\n            body: action.payload.loginInfo,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(LoginAction.LoginFinish(json.user))\n    }\n    else{\n        yield put(AlertAction.alertStart(json.message))\n    }\n}\n\nexport const LoginSaga = function* () {\n    yield takeEvery(LoginTypes.LOGIN_CREATE_START, LoginCreateStart);\n    yield takeEvery(LoginTypes.LOGIN_START, LoginStart)\n};\n","import { ControllerTypes } from \"./controller-types\";\n\nconst controllerFetchStart = (user_id) => ({\n    type: ControllerTypes.CONTROLLER_FETCH_START,\n    payload: {\n        user_id: user_id\n    }\n})\n\nconst controllerFetchFinish = (controller) => ({\n    type: ControllerTypes.CONTROLLER_FETCH_FINISH,\n    payload: {\n        controller: controller\n    }\n})\n\nconst controllerUpdateStart = (user_id, controller) => ({\n    type: ControllerTypes.CONTROLLER_UPDATE_START,\n    payload: {\n        user_id: user_id,\n        controller: controller\n    }\n})\n\nconst controllerUpdateFinish = (controller) => ({\n    type: ControllerTypes.CONTROLLER_UPDATE_FINISH,\n    payload: {\n        controller: controller\n    }\n})\n\nexport const ControllerAction = {\n    controllerFetchStart,\n    controllerFetchFinish,\n    controllerUpdateStart,\n    controllerUpdateFinish\n}\n","import {\n    call,\n    put,\n    takeEvery\n} from 'redux-saga/effects';\nimport { ControllerAction } from './controller-action';\nimport { ControllerTypes } from './controller-types';\n\nconst controllerFetchStart = function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/controller\", {\n            method: \"POST\",\n            body: JSON.stringify({\"user_id\": action.payload.user_id}),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    console.log(json)\n    if(json.success){\n        yield put(ControllerAction.controllerFetchFinish(json.controller[0]))\n    }\n}\n\nconst controllerUpdateStart = function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/update-controller/\"+action.payload.user_id, {\n            method: \"POST\",\n            body: action.payload.controller,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(ControllerAction.controllerFetchFinish(json.controller))\n    }\n}\n\nexport const ControllerSaga = function* () {\n    yield takeEvery(ControllerTypes.CONTROLLER_FETCH_START, controllerFetchStart);\n    yield takeEvery(ControllerTypes.CONTROLLER_UPDATE_START, controllerUpdateStart)\n}","import {\n\tapplyMiddleware,\n\tcombineReducers,\n\tcreateStore\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {\n\tall,\n\tcall,\n\tfork\n} from 'redux-saga/effects';\nimport { LoggerReducer } from './logger/logger-reducer';\nimport { LoggerSaga } from './logger/logger-saga';\nimport {LoginReducer} from \"./login/login-reducer\";\nimport {AlertReducer} from \"./alert/alert-reducer\";\nimport {ControllerReducer} from \"./controller/controller-reducer\";\nimport {LoginSaga} from \"./login/login-saga\";\nimport {ControllerSaga} from \"./controller/controller-saga\";\n\nconst saga = createSagaMiddleware();\n\nexport const Store = createStore(combineReducers({\n\tLoggerReducer,\n\tLoginReducer,\n\tAlertReducer,\n\tControllerReducer,\n}), applyMiddleware(saga));\n\nsaga.run(function* () {\n\tyield all([\n\t\tcall(LoggerSaga),\n\t\t...[\n\t\t\tControllerSaga,\n\t\t\tLoginSaga\n\t\t].map(fork)\n\t]);\n});\n","import React from 'react';\n\nexport const ErrorNotFoundComponent = () => (\n\t<React.Fragment>\n\t\tNot Found\n\t</React.Fragment>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {SettingOutlined, FireOutlined, StopOutlined} from '@ant-design/icons'\nimport {Button, Slider, InputNumber, Dropdown, Menu} from 'antd'\n\nclass Component extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n             Calvin\tKu\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nconst Redux = connect(store => ({\n\n}))(Component);\n\nexport const CalvinPage = Redux;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Joystick, JoystickShape } from 'react-joystick-component';\nimport Tilt from 'react-parallax-tilt';\nimport {LoginAction} from \"../../redux/login/login-action\";\nimport {SettingOutlined, FireOutlined, StopOutlined} from '@ant-design/icons'\nimport {Button, Slider, InputNumber, Dropdown, Menu} from 'antd'\nimport { ControllerAction } from '../../redux/controller/controller-action';\n\nclass Component extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            angleX : 0,\n            angleY : 0,\n            movement: \"NONE\",\n            shoot: false,\n            fireRate: 0.5,\n            force: 1,\n            levitation: 0\n\t\t}\n\t}\n\n    updateController(){\n        this.props.dispatch(ControllerAction.controllerUpdateStart(this.props.LoginReducer.user._id, JSON.stringify(this.state)))\n    }\n\n    componentDidMount() {\n        if(this.props.LoginReducer.login === false){\n            this.props.history.push(\"/\");\n        }\n        this.updateController()\n        // console.log(this.props.LoginReducer.user._id)\n        // this.props.dispatch(ControllerAction.controllerFetchStart(this.props.LoginReducer.user._id))\n        // console.log(this.props.ControllerReducer.controller);\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n                <div style={{color: \"white\", position: \"absolute\", right: \"20px\", top: \"20px\"}}>\n                    <Dropdown\n                        overlay={()=>{\n                            return(\n                                <Menu>\n                                    <Menu.Item>\n                                        Settings\n                                    </Menu.Item>\n                                    <Menu.Item>\n                                        <a onClick={()=>{\n                                            this.props.dispatch(LoginAction.Logout())\n                                            this.props.history.push(\"/\")\n                                        }}>\n                                            Logout\n                                        </a>\n                                    </Menu.Item>\n                                </Menu>\n                            )\n                            \n                        }}\n                    >\n                        <Button icon={<SettingOutlined/>} size=\"large\" style={{background: \"#329D9C\", borderColor: \"#C8EAD1\"}} type=\"primary\"/>\n                    </Dropdown>\n                </div>\n                <div style={{backgroundColor: \"#01303f\", width: \"100vw\", height: \"100vh\"}}>\n                    \n                    <div style={{\n                        display: 'flex',\n                        flexDirection: \"column\",\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        paddingTop: \"70px\",\n                    }}>\n                        <div style={{\n                            width: \"200px\",\n                            height: \"200px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"white\"\n                        }}>\n                            <Tilt tiltAngleXManual={-1*this.state.angleX} tiltAngleYManual={this.state.angleY} glareEnable={false}>\n                                <div style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    alignContent: \"center\"\n                                }}>\n                                    <img\n                                        style={{height: \"180px\", paddingTop: \"10px\"}} \n                                        src={process.env.PUBLIC_URL + '/img/racket.png'}/>\n                                </div>\n                            </Tilt>\n                        </div> \n                        <div style={{color: \"white\", fontSize: \"20px\", textAlign: \"center\", padding: \"30px\"}}>\n                            <span>Axis x: {this.state.angleX.toFixed(0)}°, </span>\n                            <span>Axis y: {this.state.angleY.toFixed(0)}°</span>\n                            <div>\n                                Movement: <b style={{color: \"#89d6fb\"}}>{this.state.movement}</b>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignContent:\"center\", alignItems: \"center\", justifyContent: \"center\", width: \"100vw\"}}>\n                        <div style={{color: \"white\", width: \"70px\"}}>\n                            Fire Rate:\n                        </div>\n                        <Slider\n                            style={{width: \"30%\"}}\n                            min={0} \n                            max={5}\n                            step={0.1}\n                            value={this.state.fireRate}\n                            onChange={(val)=>{\n                                this.setState({fireRate:val}, ()=>{\n                                    this.updateController()\n                                })\n                                \n                            }}/>\n                            <InputNumber value={this.state.fireRate}/>\n                    </div>\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignContent:\"center\", alignItems: \"center\", justifyContent: \"center\", width: \"100vw\", paddingTop: \"5px\"}}>\n                        <div style={{color: \"white\", width: \"70px\"}}>\n                            Force:\n                        </div>\n                        <Slider\n                            style={{width: \"30%\"}}\n                            min={0} \n                            max={2}\n                            step={0.1}\n                            value={this.state.force}\n                            onChange={(val)=>{\n                                this.setState({force:val}, ()=>{\n                                    this.updateController()\n                                })\n                            }}/>\n                            <InputNumber value={this.state.force}/>\n                    </div>\n                    <div style={{\n                        position: \"fixed\",\n                        bottom: \"50px\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        width: \"100vw\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Joystick \n                                baseShape={JoystickShape.Square} \n                                stickShape={JoystickShape.Square} \n                                size={80} \n                                sticky={false} \n                                baseColor={\"#d4f0fc\"} \n                                stickColor={\"#89d6fb\"}\n                                move={(stick)=>{\n                                    this.setState({movement: stick.direction}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                stop={()=>{\n                                    this.setState({movement: \"NONE\"}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                />\n                            <div style={{fontSize: \"20px\", color: \"#d4f0fc\", marginTop: \"10px\"}}>\n                                Movement\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"7%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                                <Slider style={{\n                                    height: 70\n                                }}\n                                vertical \n                                min={0} \n                                max={0.3}\n                                step={0.01}\n                                value={this.state.levitation}\n                                onChange={(val)=>{\n                                    this.setState({levitation:val}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}/>\n                            <div style={{fontSize: \"20px\", color: \"#d4f0fc\", marginTop: \"10px\"}}>\n                                Up\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Button \n                                onClick={()=>{\n                                    this.setState({shoot: !this.state.shoot}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                style={{width: 80, height: 80, backgroundColor: \"#801100\", borderColor: \"#D73502\"}}>\n                                {\n                                    (()=>{\n                                        if(this.state.shoot){\n                                            return  <StopOutlined style={{fontSize: 30, color: \"#FAC000\"}}/>\n                                        }\n                                        else{\n                                            return <FireOutlined style={{fontSize: 30, color: \"#FAC000\"}}/>\n                                            \n                                        }\n                                    })()\n                                }\n                            </Button>\n                            <div style={{fontSize: \"20px\", color: \"#FAC000\", marginTop: \"10px\"}}>\n                                {\n                                    (()=>{\n                                        if(this.state.shoot) return \"Stop\"\n                                        else return \"Shoot\"\n                                    })()\n                                }\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Joystick \n                                size={80} \n                                sticky={true} \n                                baseColor={\"#FFFF99\"} \n                                stickColor={\"#FFD300\"}\n                                move = {(stick)=>{\n                                    this.setState({\n                                        angleX: stick.y,\n                                        angleY: stick.x\n                                    }, ()=>{\n                                        this.updateController()\n                                    })\n                                }}/>\n                            <div style={{fontSize: \"20px\", color: \"#FFFF99\", marginTop: \"10px\"}}>\n                                Angle\n                            </div>\n                        </div>\n                    </div>\n                </div>\n               \n\t\t\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nconst Redux = connect(store => ({\n    LoginReducer: store.LoginReducer,\n    ControllerReducer: store.ControllerReducer\n}))(Component);\n\nexport const ControlPage = Redux;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { Input, Form, Modal, notification} from \"antd\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport {styles} from \"./styles.css\"\n\nclass Component extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t\tthis.state = {\n\t\t}\n\t}\n\n\tparticlesInit = async (main) => {\n\t\n\t\t// you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n\t\t// this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n\t\t// starting from v2 you can add only the features you need reducing the bundle size\n\t\tawait loadFull(main);\n\t  };\n\t\n\tparticlesLoaded = (container) => {\n\n\t};\n\t\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className='title'>\n\t\t\t\t\t\tCalvin Ku\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className='content'>\n\t\t\t\t\t\tWelcome to my personal website\n\t\t\t\t\t</div> */}\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t#ComputerVision #HumanPoseEstimation #SportsEnthusiast\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"row\", paddingTop: \"30px\"}}>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t// onClick={()=>{\n\t\t\t\t\t\t\t// \twindow.scrollTo(0, this.myRef.current.offsetTop) \n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\tclassName='slide'>Learn More</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <div ref={this.myRef} style={{backgroundColor:\"gray\"}}>\n\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"row\"}}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src={process.env.PUBLIC_URL+ \"/img/calvin.jpg\"} style={{width: \"50vw\"}}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className='aboutme'>About me</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n\t\t\t\t\n\t\t\t\t<div style={{zIndex:-1, position: \"fixed\"}}>\n\t\t\t\t\t<Particles\n\t\t\t\t\t\tid=\"tsparticles\"\n\t\t\t\t\t\tinit={this.particlesInit}\n\t\t\t\t\t\tloaded={this.particlesLoaded}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tbackground: {\n\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tvalue: \"#000000\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tinteractivity: {\n\t\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\t  onClick: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\tmode: \"push\",\n\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t  onHover: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\tmode: \"repulse\",\n\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t  resize: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmodes: {\n\t\t\t\t\t\t\t\t  push: {\n\t\t\t\t\t\t\t\t\tquantity: 4,\n\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t  repulse: {\n\t\t\t\t\t\t\t\t\tdistance: 40,\n\t\t\t\t\t\t\t\t\tduration: 0.4,\n\t\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\tfpsLimit: 120,\n\t\t\t\t\t\t\tparticles: {\n\t\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\t\tvalue: \"#ffffff\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlinks: {\n\t\t\t\t\t\t\t\t\tcolor: \"#ffffff\",\n\t\t\t\t\t\t\t\t\tdistance: 150,\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\topacity: 0.5,\n\t\t\t\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcollisions: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmove: {\n\t\t\t\t\t\t\t\t\tdirection: \"none\",\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\toutModes: {\n\t\t\t\t\t\t\t\t\tdefault: \"bounce\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trandom: false,\n\t\t\t\t\t\t\t\tspeed: 2,\n\t\t\t\t\t\t\t\tstraight: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnumber: {\n\t\t\t\t\t\t\t\tdensity: {\n\t\t\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\t\t\tarea: 600,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: 80,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\topacity: {\n\t\t\t\t\t\t\t\t\tvalue: 0.5,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tshape: {\n\t\t\t\t\t\t\t\t\ttype: \"circle\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsize: {\n\t\t\t\t\t\t\t\t\tvalue: { min: 1, max: 5 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// url: process.env.PUBLIC_URL+ \"/img/calvin.svg\"\n\t\t\t\t\t\t\t\t// url: `url(${process.env.PUBLIC_URL + '/img/calvin.svg'})`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdetectRetina: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}/>\n\t\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nconst Redux = connect(store => ({\n    LoginReducer: store.LoginReducer,\n    AlertReducer: store.AlertReducer\n}))(Component);\n\nexport const IndexPage = Redux;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { ErrorNotFoundComponent } from '../components/error-component/error-component';\nimport { CalvinPage } from './calvin-page/calvin-page';\nimport { ControlPage } from './control-page/control-page';\nimport { IndexPage } from './index-page/index-page';\n\n\nexport const Navigator = () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={IndexPage}/>\n\t\t\t<Route exact path='/calvinku' component={CalvinPage}/>\n\t\t\t<Route component={ErrorNotFoundComponent}/>\n\t\t</Switch>\n\t</Router>\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Store } from './redux/store';\nimport { Navigator } from './pages/navigator';\n\nexport const App = () => (\n\t<Provider store={Store}>\n\t\t<Navigator/>\n\t</Provider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.min.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}