{"version":3,"sources":["redux/utils.js","redux/logger/logger-types.js","redux/logger/logger-reducer.js","redux/logger/logger-action.js","redux/logger/logger-saga.js","redux/login/login-types.js","redux/login/login-reducer.js","redux/alert/alert-types.js","redux/alert/alert-reducer.js","redux/controller/controller-types.js","redux/controller/controller-reducer.js","redux/alert/alert-action.js","redux/login/login-action.js","redux/login/login-saga.js","redux/controller/controller-action.js","redux/controller/controller-saga.js","redux/store.js","components/error-component/error-component.jsx","pages/control-page/control-page.jsx","components/alert-component/alert-component.jsx","pages/index-page/index-page.jsx","pages/navigator.jsx","App.jsx","index.js"],"names":["createReducer","initialState","handlers","state","action","hasOwnProperty","type","payload","LoggerTypes","LoggerReducer","history","LoggerAction","dispatched","put","LoggerSaga","takeEvery","LoginTypes","LoginReducer","login","user","accountModalSuccess","loginInfo","AlertType","AlertReducer","message","show","ControllerTypes","ControllerReducer","controller","AlertAction","LoginAction","userInfo","accountInfo","result","close","LoginCreateStart","task","Promise","resolve","reject","fetch","method","body","headers","then","response","json","call","success","LoginStart","LoginSaga","ControllerAction","user_id","controllerFetchStart","JSON","stringify","console","log","controllerUpdateStart","ControllerSaga","saga","createSagaMiddleware","Store","createStore","combineReducers","applyMiddleware","run","all","map","fork","ErrorNotFoundComponent","Fragment","Component","props","angleX","angleY","movement","shoot","fireRate","force","levitation","this","dispatch","_id","push","updateController","style","color","position","right","top","overlay","Item","onClick","icon","SettingOutlined","size","background","borderColor","backgroundColor","width","height","display","flexDirection","alignItems","justifyContent","paddingTop","borderRadius","tiltAngleXManual","tiltAngleYManual","glareEnable","alignContent","src","fontSize","textAlign","padding","toFixed","min","max","step","value","onChange","val","setState","bottom","baseShape","JoystickShape","Square","stickShape","sticky","baseColor","stickColor","move","stick","direction","stop","marginTop","vertical","StopOutlined","FireOutlined","y","x","React","ControlPage","connect","store","visible","onCancel","OnOk","title","footer","key","AlertComponent","createAccountModalVisibility","loginUsername","loginPassword","firstName","lastName","email","username","password","prevProps","prevState","snapshot","notification","description","duration","centered","alt","paddingBottom","fontFamily","opacity","e","target","Password","marginBottom","Button","variant","minHeight","margin","backgroundImage","backgroundSize","backgroundRepeat","minWidth","left","transform","fontWeight","name","rules","required","placeholder","href","IndexPage","Navigator","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51ca057b.chunk.js","sourcesContent":["export const createReducer = (initialState, handlers) => (state = initialState, action) => {\n\tif (handlers.hasOwnProperty(action.type)) {\n\t\treturn handlers[action.type](state, action.payload);\n\t} else {\n\t\treturn state;\n\t}\n};\n","export const LoggerTypes = {\n\tDISPATCHED: 'Logger/DISPATCHED'\n};\n","import { createReducer } from '../utils';\nimport { LoggerTypes } from './logger-types';\n\nconst initialState = {\n\thistory: []\n};\n\nconst dispatched = (state, payload) => ({\n\t...state,\n\thistory: [\n\t\t...state.history,\n\t\tpayload\n\t]\n});\n\nexport const LoggerReducer = createReducer(initialState, {\n\t[LoggerTypes.DISPATCHED]: dispatched\n});\n","import { LoggerTypes } from './logger-types';\n\nconst dispatched = action => ({\n\ttype: LoggerTypes.DISPATCHED,\n\tpayload: action\n});\n\nexport const LoggerAction = {\n\tdispatched\n};\n","import {\n\tput,\n\ttakeEvery\n} from 'redux-saga/effects';\nimport { LoggerTypes } from './logger-types';\nimport { LoggerAction } from './logger-action';\n\nconst dispatched = function* (action) {\n\tif (action.type !== LoggerTypes.DISPATCHED) {\n\t\tyield put(LoggerAction.dispatched(action));\n\t}\n};\n\nexport const LoggerSaga = function* () {\n\tyield takeEvery('*', dispatched);\n};\n","export const LoginTypes = {\n    LOGIN_START: 'Login/LOGIN_START',\n    LOGIN_FINISH: \"Login/LOGIN_FINISH\",\n    LOGIN_CREATE_START: \"Login/LOGIN_CREATE_START\",\n    LOGIN_CREATE_FINISH: \"Login/LOGIN_CREATE_FINISH\",\n    LOGIN_MODAL_CLOSE: \"LOGIN/LOGIN_MODAL_CLOSE\",\n    LOGOUT: \"Login/LOGOUT\"\n};\n","import {LoginTypes} from \"./login-types\";\nimport {createReducer} from \"../utils\";\n\nconst initialState = {\n    login: false,\n    user: {},\n    accountModalSuccess: false,\n}\n\nconst loginFinish = (state, payload) => ({\n    ...state,\n    user: payload.loginInfo,\n    login: true\n});\n\nconst loginCreateFinish = (state, payload) => ({\n    ...state,\n    accountModalSuccess: true\n});\n\nconst loginCreateModalClose = (state, payload) => ({\n    ...state,\n    accountModalSuccess: payload.accountModalSuccess\n})\n\nconst logout = (state, payload) => ({\n    ...state,\n    user: {},\n    login: false\n})\n\n\nexport const LoginReducer = createReducer(initialState, {\n    [LoginTypes.LOGIN_FINISH]: loginFinish,\n    [LoginTypes.LOGIN_CREATE_FINISH]: loginCreateFinish,\n    [LoginTypes.LOGIN_MODAL_CLOSE]: loginCreateModalClose,\n    [LoginTypes.LOGOUT]: logout\n});\n","export const AlertType = {\n    ALERT_START: \"alert/ALERT_START\",\n    ALERT_STOP: \"alert/ALERT_STOP\",\n};","import { createReducer } from \"../utils\";\nimport { AlertType } from \"./alert-types\";\n\nconst initialState = {\n    message: \"\",\n    show: false\n};\n\nconst alertStart =(state, payload) => ({\n    ...state,\n    message: payload.message,\n    show: true\n});\n\nconst alertStop = (state, payload) => ({\n    ...state,\n    message: \"\",\n    show: false\n});\n\nexport const AlertReducer = createReducer(initialState, {\n    [AlertType.ALERT_START]: alertStart,\n    [AlertType.ALERT_STOP]: alertStop\n});\n","export const ControllerTypes = {\n    CONTROLLER_FETCH_START: 'controller/CONTROLLER_FETCH_START',\n    CONTROLLER_FETCH_FINISH: 'controller/CONTROLLER_FETCH_FINISH',\n    CONTROLLER_UPDATE_START: 'controller/CONTROLLER_UPDATE_START',\n    CONTROLLER_UPDATE_FINISH: 'controller/CONTROLLER_UPDATE_FINISH',\n};","import { createReducer } from \"../utils\"\nimport { ControllerTypes } from \"./controller-types\"\n\nconst initialState = {\n    controller: {}\n}\n\nconst controllerFetchFinish = (state, payload) => ({\n    ...state,\n    controller: payload.controller\n})\n\nexport const ControllerReducer = createReducer(initialState, {\n    [ControllerTypes.CONTROLLER_FETCH_FINISH]: controllerFetchFinish\n})","import { AlertType } from \"./alert-types\";\n\nconst alertStart = (message) => ({\n    type: AlertType.ALERT_START,\n    payload: {\n        message: message,\n        show: true\n    }\n});\n\nconst alertStop = () => ({\n    type: AlertType.ALERT_STOP,\n    payload: {}\n});\n\nexport const AlertAction = {\n    alertStart,\n    alertStop\n};\n","import {LoginTypes} from \"./login-types\";\n\nconst LoginStart = (loginInfo) => ({\n    type: LoginTypes.LOGIN_START,\n    payload: {\n        loginInfo: loginInfo\n    }\n});\n\nconst LoginFinish = (userInfo) => ({\n    type: LoginTypes.LOGIN_FINISH,\n    payload: {\n        loginInfo: userInfo\n    }\n});\n\nconst LoginCreateStart = (accountInfo) => ({\n    type: LoginTypes.LOGIN_CREATE_START,\n    payload: {\n        accountInfo: accountInfo\n    }\n});\n\nconst LoginCreateFinish = (result) => ({\n    type: LoginTypes.LOGIN_CREATE_FINISH,\n    payload:{\n        result: result\n    }\n});\n\nconst LoginCreateModalClose = (close) => ({\n    type: LoginTypes.LOGIN_MODAL_CLOSE,\n    payload: {\n        accountModalSuccess: false\n    }\n})\n\nconst Logout = () => ({\n    type: LoginTypes.LOGOUT,\n    payload:{\n\n    }\n})\n\nexport const LoginAction = {\n    LoginStart,\n    LoginFinish,\n    LoginCreateStart,\n    LoginCreateFinish,\n    LoginCreateModalClose,\n    Logout\n}\n\n","import {\n    call,\n    put,\n    takeEvery\n} from 'redux-saga/effects';\nimport {AlertAction} from \"../alert/alert-action\";\nimport {LoginAction} from \"./login-action\";\nimport {LoginTypes} from \"./login-types\";\n\nconst LoginCreateStart =  function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/create-user\", {\n            method: \"POST\",\n            body: action.payload.accountInfo,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(LoginAction.LoginCreateFinish(json.success))\n    }\n    else{\n        yield put(AlertAction.alertStart(json.message))\n    }\n}\n\nconst LoginStart =  function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/login\", {\n            method: \"POST\",\n            body: action.payload.loginInfo,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(LoginAction.LoginFinish(json.user))\n    }\n    else{\n        yield put(AlertAction.alertStart(json.message))\n    }\n}\n\nexport const LoginSaga = function* () {\n    yield takeEvery(LoginTypes.LOGIN_CREATE_START, LoginCreateStart);\n    yield takeEvery(LoginTypes.LOGIN_START, LoginStart)\n};\n","import { ControllerTypes } from \"./controller-types\";\n\nconst controllerFetchStart = (user_id) => ({\n    type: ControllerTypes.CONTROLLER_FETCH_START,\n    payload: {\n        user_id: user_id\n    }\n})\n\nconst controllerFetchFinish = (controller) => ({\n    type: ControllerTypes.CONTROLLER_FETCH_FINISH,\n    payload: {\n        controller: controller\n    }\n})\n\nconst controllerUpdateStart = (user_id, controller) => ({\n    type: ControllerTypes.CONTROLLER_UPDATE_START,\n    payload: {\n        user_id: user_id,\n        controller: controller\n    }\n})\n\nconst controllerUpdateFinish = (controller) => ({\n    type: ControllerTypes.CONTROLLER_UPDATE_FINISH,\n    payload: {\n        controller: controller\n    }\n})\n\nexport const ControllerAction = {\n    controllerFetchStart,\n    controllerFetchFinish,\n    controllerUpdateStart,\n    controllerUpdateFinish\n}\n","import {\n    call,\n    put,\n    takeEvery\n} from 'redux-saga/effects';\nimport { ControllerAction } from './controller-action';\nimport { ControllerTypes } from './controller-types';\n\nconst controllerFetchStart = function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/controller\", {\n            method: \"POST\",\n            body: JSON.stringify({\"user_id\": action.payload.user_id}),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    console.log(json)\n    if(json.success){\n        yield put(ControllerAction.controllerFetchFinish(json.controller[0]))\n    }\n}\n\nconst controllerUpdateStart = function *(action) {\n    const task = () => new Promise((resolve, reject)=>{\n        fetch(\"/api/update-controller/\"+action.payload.user_id, {\n            method: \"POST\",\n            body: action.payload.controller,\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n            .then(json=> {\n                resolve(json)\n            })\n    })\n    const json = yield call(task);\n    if(json.success){\n        yield put(ControllerAction.controllerFetchFinish(json.controller))\n    }\n}\n\nexport const ControllerSaga = function* () {\n    yield takeEvery(ControllerTypes.CONTROLLER_FETCH_START, controllerFetchStart);\n    yield takeEvery(ControllerTypes.CONTROLLER_UPDATE_START, controllerUpdateStart)\n}","import {\n\tapplyMiddleware,\n\tcombineReducers,\n\tcreateStore\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {\n\tall,\n\tcall,\n\tfork\n} from 'redux-saga/effects';\nimport { LoggerReducer } from './logger/logger-reducer';\nimport { LoggerSaga } from './logger/logger-saga';\nimport {LoginReducer} from \"./login/login-reducer\";\nimport {AlertReducer} from \"./alert/alert-reducer\";\nimport {ControllerReducer} from \"./controller/controller-reducer\";\nimport {LoginSaga} from \"./login/login-saga\";\nimport {ControllerSaga} from \"./controller/controller-saga\";\n\nconst saga = createSagaMiddleware();\n\nexport const Store = createStore(combineReducers({\n\tLoggerReducer,\n\tLoginReducer,\n\tAlertReducer,\n\tControllerReducer,\n}), applyMiddleware(saga));\n\nsaga.run(function* () {\n\tyield all([\n\t\tcall(LoggerSaga),\n\t\t...[\n\t\t\tControllerSaga,\n\t\t\tLoginSaga\n\t\t].map(fork)\n\t]);\n});\n","import React from 'react';\n\nexport const ErrorNotFoundComponent = () => (\n\t<React.Fragment>\n\t\tNot Found\n\t</React.Fragment>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Joystick, JoystickShape } from 'react-joystick-component';\nimport Tilt from 'react-parallax-tilt';\nimport {LoginAction} from \"../../redux/login/login-action\";\nimport {SettingOutlined, FireOutlined, StopOutlined} from '@ant-design/icons'\nimport {Button, Slider, InputNumber, Dropdown, Menu} from 'antd'\nimport { ControllerAction } from '../../redux/controller/controller-action';\n\nclass Component extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            angleX : 0,\n            angleY : 0,\n            movement: \"NONE\",\n            shoot: false,\n            fireRate: 0.5,\n            force: 1,\n            levitation: 0\n\t\t}\n\t}\n\n    updateController(){\n        this.props.dispatch(ControllerAction.controllerUpdateStart(this.props.LoginReducer.user._id, JSON.stringify(this.state)))\n    }\n\n    componentDidMount() {\n        if(this.props.LoginReducer.login === false){\n            this.props.history.push(\"/\");\n        }\n        this.updateController()\n        // console.log(this.props.LoginReducer.user._id)\n        // this.props.dispatch(ControllerAction.controllerFetchStart(this.props.LoginReducer.user._id))\n        // console.log(this.props.ControllerReducer.controller);\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n                <div style={{color: \"white\", position: \"absolute\", right: \"20px\", top: \"20px\"}}>\n                    <Dropdown\n                        overlay={()=>{\n                            return(\n                                <Menu>\n                                    <Menu.Item>\n                                        Settings\n                                    </Menu.Item>\n                                    <Menu.Item>\n                                        <a onClick={()=>{\n                                            this.props.dispatch(LoginAction.Logout())\n                                            this.props.history.push(\"/\")\n                                        }}>\n                                            Logout\n                                        </a>\n                                    </Menu.Item>\n                                </Menu>\n                            )\n                            \n                        }}\n                    >\n                        <Button icon={<SettingOutlined/>} size=\"large\" style={{background: \"#329D9C\", borderColor: \"#C8EAD1\"}} type=\"primary\"/>\n                    </Dropdown>\n                </div>\n                <div style={{backgroundColor: \"#01303f\", width: \"100vw\", height: \"100vh\"}}>\n                    \n                    <div style={{\n                        display: 'flex',\n                        flexDirection: \"column\",\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        paddingTop: \"70px\",\n                    }}>\n                        <div style={{\n                            width: \"200px\",\n                            height: \"200px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"white\"\n                        }}>\n                            <Tilt tiltAngleXManual={-1*this.state.angleX} tiltAngleYManual={this.state.angleY} glareEnable={false}>\n                                <div style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    alignContent: \"center\"\n                                }}>\n                                    <img\n                                        style={{height: \"180px\", paddingTop: \"10px\"}} \n                                        src={process.env.PUBLIC_URL + '/img/racket.png'}/>\n                                </div>\n                            </Tilt>\n                        </div> \n                        <div style={{color: \"white\", fontSize: \"20px\", textAlign: \"center\", padding: \"30px\"}}>\n                            <span>Axis x: {this.state.angleX.toFixed(0)}°, </span>\n                            <span>Axis y: {this.state.angleY.toFixed(0)}°</span>\n                            <div>\n                                Movement: <b style={{color: \"#89d6fb\"}}>{this.state.movement}</b>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignContent:\"center\", alignItems: \"center\", justifyContent: \"center\", width: \"100vw\"}}>\n                        <div style={{color: \"white\", width: \"70px\"}}>\n                            Fire Rate:\n                        </div>\n                        <Slider\n                            style={{width: \"30%\"}}\n                            min={0} \n                            max={5}\n                            step={0.1}\n                            value={this.state.fireRate}\n                            onChange={(val)=>{\n                                this.setState({fireRate:val}, ()=>{\n                                    this.updateController()\n                                })\n                                \n                            }}/>\n                            <InputNumber value={this.state.fireRate}/>\n                    </div>\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignContent:\"center\", alignItems: \"center\", justifyContent: \"center\", width: \"100vw\", paddingTop: \"5px\"}}>\n                        <div style={{color: \"white\", width: \"70px\"}}>\n                            Force:\n                        </div>\n                        <Slider\n                            style={{width: \"30%\"}}\n                            min={0} \n                            max={2}\n                            step={0.1}\n                            value={this.state.force}\n                            onChange={(val)=>{\n                                this.setState({force:val}, ()=>{\n                                    this.updateController()\n                                })\n                            }}/>\n                            <InputNumber value={this.state.force}/>\n                    </div>\n                    <div style={{\n                        position: \"fixed\",\n                        bottom: \"50px\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        width: \"100vw\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Joystick \n                                baseShape={JoystickShape.Square} \n                                stickShape={JoystickShape.Square} \n                                size={80} \n                                sticky={false} \n                                baseColor={\"#d4f0fc\"} \n                                stickColor={\"#89d6fb\"}\n                                move={(stick)=>{\n                                    this.setState({movement: stick.direction}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                stop={()=>{\n                                    this.setState({movement: \"NONE\"}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                />\n                            <div style={{fontSize: \"20px\", color: \"#d4f0fc\", marginTop: \"10px\"}}>\n                                Movement\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"7%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                                <Slider style={{\n                                    height: 70\n                                }}\n                                vertical \n                                min={0} \n                                max={0.3}\n                                step={0.01}\n                                value={this.state.levitation}\n                                onChange={(val)=>{\n                                    this.setState({levitation:val}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}/>\n                            <div style={{fontSize: \"20px\", color: \"#d4f0fc\", marginTop: \"10px\"}}>\n                                Up\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Button \n                                onClick={()=>{\n                                    this.setState({shoot: !this.state.shoot}, ()=>{\n                                        this.updateController()\n                                    })\n                                }}\n                                style={{width: 80, height: 80, backgroundColor: \"#801100\", borderColor: \"#D73502\"}}>\n                                {\n                                    (()=>{\n                                        if(this.state.shoot){\n                                            return  <StopOutlined style={{fontSize: 30, color: \"#FAC000\"}}/>\n                                        }\n                                        else{\n                                            return <FireOutlined style={{fontSize: 30, color: \"#FAC000\"}}/>\n                                            \n                                        }\n                                    })()\n                                }\n                            </Button>\n                            <div style={{fontSize: \"20px\", color: \"#FAC000\", marginTop: \"10px\"}}>\n                                {\n                                    (()=>{\n                                        if(this.state.shoot) return \"Stop\"\n                                        else return \"Shoot\"\n                                    })()\n                                }\n                            </div>\n                        </div>\n                        <div style={{\n                            width: \"31%\", \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            justifyContent: \"center\", \n                            flexDirection: \"column\"\n                            }}>\n                            <Joystick \n                                size={80} \n                                sticky={true} \n                                baseColor={\"#FFFF99\"} \n                                stickColor={\"#FFD300\"}\n                                move = {(stick)=>{\n                                    this.setState({\n                                        angleX: stick.y,\n                                        angleY: stick.x\n                                    }, ()=>{\n                                        this.updateController()\n                                    })\n                                }}/>\n                            <div style={{fontSize: \"20px\", color: \"#FFFF99\", marginTop: \"10px\"}}>\n                                Angle\n                            </div>\n                        </div>\n                    </div>\n                </div>\n               \n\t\t\t\t\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nconst Redux = connect(store => ({\n    LoginReducer: store.LoginReducer,\n    ControllerReducer: store.ControllerReducer\n}))(Component);\n\nexport const ControlPage = Redux;\n","import React from 'react';\nimport { AlertAction } from \"../../redux/alert/alert-action\";\nimport { connect } from 'react-redux';\nimport {Button, Modal} from 'antd';\n\nclass Component extends React.Component {\n\n    render() {\n        return(\n            <React.Fragment>\n                <Modal\n                    visible={this.props.AlertReducer.show}\n                    onCancel={\n                        ()=>{\n                            this.props.dispatch(AlertAction.alertStop())\n                        }\n                    }\n                    OnOk={\n                        ()=>{\n                            this.props.dispatch(AlertAction.alertStop())\n                        }\n                    }\n                    title=\"Error\"\n                    footer={[\n                        <Button\n                            key=\"okay\"\n                            onClick={()=>{\n                                this.props.dispatch(AlertAction.alertStop())\n                            }}\n                        >\n                            Okay\n                        </Button>\n                    ]}>\n                    {this.props.AlertReducer.message}\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nconst Redux = connect(store => ({\n    AlertReducer: store.AlertReducer\n}))(Component);\n\nexport const AlertComponent = Redux;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { Input, Form, Modal, notification} from \"antd\";\nimport { AlertComponent } from '../../components/alert-component/alert-component';\nimport {LoginAction} from \"../../redux/login/login-action\";\nimport {AlertAction} from \"../../redux/alert/alert-action\";\n\nclass Component extends React.Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcreateAccountModalVisibility: false,\n\t\t\tloginUsername: \"\",\n\t\t\tloginPassword: \"\",\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\temail: \"\",\n\t\t\tusername: \"\",\n\t\t\tpassword: \"\",\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.LoginReducer.login === true){\n            this.props.history.push(\"/control\");\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{\n\t\t\t\t\t(()=>{\n\t\t\t\t\t\tif(this.props.AlertReducer.show) return <AlertComponent/>\n\t\t\t\t\t})()\n\t\t\t\t}\n\t\t\t\t{\n                    (()=>{\n                        if(this.props.LoginReducer.accountModalSuccess){\n                            this.props.dispatch(LoginAction.LoginCreateModalClose(false))\n                            this.setState({\n                                createAccountModalVisibility: false,\n                                firstName: \"\",\n                                lastName: \"\",\n                                email: \"\",\n                                username: \"\",\n                                password: \"\",\n                            })\n                            return(notification['success']({\n                                message: 'Account Created',\n                                description:\n                                    'Your account has been successfully created.',\n                                duration: 5\n                            }))\n                        }\n                    })()\n                }\n\t\t\t\t<Modal\n\t\t\t\t\tcentered\n\t\t\t\t\t// title=\"Sign Up\"\n\t\t\t\t\tvisible={this.state.createAccountModalVisibility}\n\t\t\t\t\tonCancel={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcreateAccountModalVisibility: false,\n\t\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tusername: \"\",\n\t\t\t\t\t\tpassword: \"\",\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tfooter={[]}\n\t\t\t\t\t>\n\t\t\t\t\t<img style={{\n\t\t\t\t\t\t\theight: \"80px\"\n\t\t\t\t\t\t}} \n\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL+ \"/img/mislabLogo.png\"} \n\t\t\t\t\t\t\talt=\"logo\"/>\n\t\t\t\t\t<div style={{fontSize: \"2.2em\", paddingBottom: \"15px\", fontFamily: \"Roboto, sans-serif\"}}>New Account</div>\n\t\t\t\t\t<div style={{ color: \"black\", opacity: 1 }}>\n\t\t\t\t\t\t<span style={{ color: \"rgb(255, 77, 79)\" }}>{\"* \"}</span>\n\t\t\t\t\t\tFirst Name\n\t\t\t\t\t</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ firstName: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div style={{ color: \"black\", opacity: 1, paddingTop: \"11.75px\" }}>\n\t\t\t\t\t\t<span style={{ color: \"rgb(255, 77, 79)\" }}>{\"* \"}</span>\n\t\t\t\t\t\tLast Name\n\t\t\t\t\t</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ lastName: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ color: \"black\", opacity: 1, paddingTop: \"11.75px\" }}>\n\t\t\t\t\t\t<span style={{ color: \"rgb(255, 77, 79)\" }}>{\"* \"}</span>\n\t\t\t\t\t\tEmail\n\t\t\t\t\t</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ email: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={{ color: \"black\", opacity: 1, paddingTop: \"11.75px\" }}>\n\t\t\t\t\t\t<span style={{ color: \"rgb(255, 77, 79)\" }}>{\"* \"}</span>\n\t\t\t\t\t\tUsername\n\t\t\t\t\t</div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ username: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div style={{ color: \"black\", opacity: 1, paddingTop: \"11.75px\" }}>\n\t\t\t\t\t\t<span style={{ color: \"rgb(255, 77, 79)\" }}>{\"* \"}</span>\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</div>\n\t\t\t\t\t<Input.Password\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginBottom: \"11.75px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ password: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tstyle={{width: \"100%\", marginTop: \"10px\"}}\n\t\t\t\t\t\tkey=\"submit\"\n\t\t\t\t\t\tvariant=\"success\" \n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.dispatch(LoginAction.LoginCreateStart(JSON.stringify({\n\t\t\t\t\t\t\t\t\"firstName\": this.state.firstName,\n\t\t\t\t\t\t\t\t\"lastName\": this.state.lastName,\n\t\t\t\t\t\t\t\t\"email\": this.state.email,\n\t\t\t\t\t\t\t\t\"username\": this.state.username,\n\t\t\t\t\t\t\t\t\"password\": this.state.password\n\t\t\t\t\t\t\t})));\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\t\t\t\n\t\t\t\t<div style={\n\t\t\t\t\t{\t\n\t\t\t\t\t\tminHeight: \"100vh\",\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\twidth: \"100vw\", \n\t\t\t\t\t\tbackgroundImage: `url(${process.env.PUBLIC_URL + '/img/wallpaper.jpg'})`, \n\t\t\t\t\t\tbackgroundSize: \"cover\", \n\t\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\t\tfontFamily: \"Roboto, sans-serif\"\n\t\t\t\t\t}\n\t\t\t\t}>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\theight: \"100vh\",\n\t\t\t\t\t\twidth: \"100vw\",\n\t\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\t\topacity: \"0.45\"\n\t\t\t\t\t}}/>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tpadding: \"40px\",\n\t\t\t\t\t\twidth: \"30%\",\n\t\t\t\t\t\tminWidth: \"350px\",\n\t\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\t\tborderRadius: \"24px\",\n\t\t\t\t\t\tbackgroundColor: \"black\",\n\t\t\t\t\t\topacity: \"0.8\"\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tmarginBottom: \"20px\",\n\t\t\t\t\t\t\tcolor: \"white\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<img style={{\n\t\t\t\t\t\t\t\theight: \"80px\"\n\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\tsrc={process.env.PUBLIC_URL+ \"/img/mislabLogo.png\"} \n\t\t\t\t\t\t\t\talt=\"logo\"/>\n\t\t\t\t\t\t\t\t<div style={{fontSize: \"2em\"}}>Welcome Back!</div>\n\t\t\t\t\t\t\t\t<div style={{margin: \"10px\", fontWeight: 50, fontSize: \"1em\"}}>Enter your credintials to login</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Form size={\"large\"} name=\"basic\">\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{ required: true, message: \"Please input your username!\" },\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tplaceholder=\"username\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.loginUsername}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ loginUsername: e.target.value });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{ required: true, message: \"Please input your password!\" },\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input.Password\n\t\t\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.loginPassword}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState({ loginPassword: e.target.value });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t<div style={{padding: \"10px\"}}>\n\t\t\t\t\t\t\t<Button variant=\"success\" style={{width: \"100%\"}}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tif(this.state.loginUsername === \"\" || this.state.loginPassword===\"\"){\n\t\t\t\t\t\t\t\t\t\tthis.props.dispatch(AlertAction.alertStart(\"Empty username or password\"))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tthis.props.dispatch(LoginAction.LoginStart(JSON.stringify({\n\t\t\t\t\t\t\t\t\t\t\t\"username\": this.state.loginUsername,\n\t\t\t\t\t\t\t\t\t\t\t\"password\": this.state.loginPassword\n\t\t\t\t\t\t\t\t\t\t})))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{padding: \"10px\"}}>\n\t\t\t\t\t\t\t<a \n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tthis.setState({createAccountModalVisibility: true})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\thref=\"#\" \n\t\t\t\t\t\t\t\tstyle={{color: \"#888888\", fontSize: \"0.9em\"}}>\n\t\t\t\t\t\t\t\tCreate new Account\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n}\n\nconst Redux = connect(store => ({\n    LoginReducer: store.LoginReducer,\n    AlertReducer: store.AlertReducer\n}))(Component);\n\nexport const IndexPage = Redux;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { ErrorNotFoundComponent } from '../components/error-component/error-component';\nimport { ControlPage } from './control-page/control-page';\nimport { IndexPage } from './index-page/index-page';\n\n\nexport const Navigator = () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={IndexPage}/>\n\t\t\t<Route exact path='/control' component={ControlPage}/>\n\t\t\t<Route component={ErrorNotFoundComponent}/>\n\t\t</Switch>\n\t</Router>\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Store } from './redux/store';\nimport { Navigator } from './pages/navigator';\n\nexport const App = () => (\n\t<Provider store={Store}>\n\t\t<Navigator/>\n\t</Provider>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.min.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}